1、静态代理(接口代理)
    优点：可以做到在不修改目标对象的功能前提下,对目标功能扩展
          可以代理final类、final/static方法
    限制：因为代理对象需要与目标对象实现一样的接口,所以会有很多代理类,类太多.
          同时,一旦接口增加方法,目标对象与代理对象都要维护.
2、动态代理
    JDK代理(接口代理)：
        优点：动态，不需新增子类，使用jdk提供的java.lang.reflect.Proxy技术实现
              可以代理final类、final/static方法
        限制：需要实现接口、性能差
    cglib代理：,也叫作子类代理,它是在内存中构建一个子类对象从而实现对目标对象功能的扩展
        优点：不需要实现接口
        限制：1、代理的类不能为final,否则报错
              2、目标对象的方法如果为final/static,那么就不会被拦截,即不会执行目标对象额外的业务方法.
         接口代理可以代理final类、final/static方法

cglib代理比jdk代理快的原因：jdk使用的是反射技术，jvm无法对其进行优化，相当于脚本执行
    cglib使用的是asm动态生成字节码，jvm可以对他进行优化